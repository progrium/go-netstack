// automatically generated by stateify.

package bpf

import (
	"github.com/progrium/go-netstack/gvisor/pkg/abi/linux"
	"github.com/progrium/go-netstack/gvisor/pkg/state"
)

func (ins *Instruction) StateTypeName() string {
	return "pkg/bpf.Instruction"
}

func (ins *Instruction) StateFields() []string {
	return (*linux.BPFInstruction)(ins).StateFields()
}

// +checklocksignore
func (ins *Instruction) StateSave(stateSinkObject state.Sink) {
	(*linux.BPFInstruction)(ins).StateSave(stateSinkObject)
}

// +checklocksignore
func (ins *Instruction) StateLoad(stateSourceObject state.Source) {
	(*linux.BPFInstruction)(ins).StateLoad(stateSourceObject)
}

func (p *Program) StateTypeName() string {
	return "pkg/bpf.Program"
}

func (p *Program) StateFields() []string {
	return []string{
		"instructions",
	}
}

func (p *Program) beforeSave() {}

// +checklocksignore
func (p *Program) StateSave(stateSinkObject state.Sink) {
	p.beforeSave()
	stateSinkObject.Save(0, &p.instructions)
}

func (p *Program) afterLoad() {}

// +checklocksignore
func (p *Program) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &p.instructions)
}

func init() {
	state.Register((*Instruction)(nil))
	state.Register((*Program)(nil))
}
